<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


    <context:annotation-config/>

    <!--
     | Properties configuration.  NOTE:  This bean must be explicitly defined to work with EL
     | expressions in bean definitions.
     +-->
    <bean id="propertyConfigurer" class="org.springframework.context.support.PortalPropertySourcesPlaceholderConfigurer">
        <!--
         | Supports encrypted properties within the location(s) listed in this
         | bean.  The password is the environment variable "UP_JASYPT_KEY"
         | (see http://www.jasypt.org/).
         +-->
        <property name="locations">
            <list>
                <!--
                 | It's tempting to move the settings in these files to application.properties
                 | (Spring Boot convention), but doing so seems to override the settings in
                 | PORTAL_HOME.
                 +-->
                <value>classpath:datasource.properties</value>
                <value>classpath:configuration.properties</value>
                <!--
                 | The following optional files allow deployers to set or override most
                 | configuration settings in a manner that is outside the footprint of the
                 | build/deploy cycle and SCM.
                 |
                 | Reasons for choosing that may include:
                 |   - Desire to keep sensitive information out of your Git repository
                 |   - Ability to change some common settings without a full build and deploy cycle
                 |   - Building a WAR/EAR that is environment-independent
                 |
                 | Any property defined in the above files that is referenced in the Spring context
                 | may be overridden in one (or both) of these files.  Later files override earlier
                 | files.
                 |
                 | The conventional location of ${portal.home} is ${catalina.base}/portal;  but you
                 | can (typically) override that location using a PORTAL_HOME environment variable.
                 | (Ultimately it depends on your setenv.sh or setenv.bat file.)
                 |
                 | The first file (global.properties) may contain properties that are shared with
                 | other modules (e.g. portlets) in Tomcat.  Several Apereo portlets source
                 | global.properties automatically.  The second file (notification.properties) is
                 | (should be) sourced by this module exclusively.
                 +-->
                <value>file:${portal.home}/global.properties</value>
                <value>file:${portal.home}/notification.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true" />
    </bean>

    <!--
     | Message source for this application.
     +-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>

    <bean id="notificationResponseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="notificationResponseCache"/>

    <!--
     | view resolvers
     +-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="10" />
        <property name="cache" value="true" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1"/>
    </bean>

    <!-- Abstract Default Exception Handler Bean -->
    <bean id="defaultExceptionHandlerTemplate"
        class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver"
        abstract="true">
        <property name="defaultErrorView" value="defError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="javax.portlet.PortletSecurityException">notAuthorized</prop>
                <prop key="javax.portlet.UnavailableException">notAvailable</prop>
            </props>
        </property>
    </bean>

    <!--
     | Notification Service Beans
     |
     | Reference these as needed within portlet contexts, or optionally define
     | additional service beans there.
     +-->

    <!-- ClassLoader:  Use 'ClassLoaderResourceNotificationService.locations' preference to specify location of data files -->
    <bean id="classLoaderResourceNotificationService" class="org.jasig.portlet.notice.service.classloader.ClassLoaderResourceNotificationService">
        <property name="name" value="classLoaderResourceNotificationService"/>
    </bean>
    <bean id="ClassLoaderResourceNotificationService.responseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="ClassLoaderResourceNotificationService.responseCache"/>

    <!-- Rome (RSS/Atom):  Use 'RomeNotificationService.urls' preference to specify feeds -->
    <bean id="romeNotificationService" class="org.jasig.portlet.notice.service.rome.RomeNotificationService">
        <property name="name" value="romeNoticationService"/>
    </bean>
    <bean id="RomeNotificationService.feedCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="RomeNotificationService.feedCache"/>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="requestFactory">
            <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
                <property name="httpClient" ref="httpClient" />
            </bean>
        </property>
    </bean>

    <!-- RESTful JSON:  Use 'RestfulJsonNotificationService.serviceUrls' preference to specify services -->
    <bean id="restfulJsonNotificationService" class="org.jasig.portlet.notice.service.rest.RestfulJsonNotificationService">
        <property name="name" value="restfulJsonNotificationService"/>
        <!-- For HTTP Basic AuthN -->
        <property name="usernameEvaluator">
            <bean class="org.jasig.portlet.notice.service.rest.StringLiteralParameterEvaluator" p:value="${restfulJsonNotificationService.basicauth.username}"/>
        </property>
        <property name="passwordEvaluator">
            <bean class="org.jasig.portlet.notice.service.rest.StringLiteralParameterEvaluator" p:value="${restfulJsonNotificationService.basicauth.password}"/>
        </property>
        <property name="restTemplate" ref="restTemplate"/>
    </bean>

    <!-- The restfulJsonNotificationService finds IParameterEvaluator beans in the app context and knows how o use them -->
    <bean id="usernameParameterEvaluator" class="org.jasig.portlet.notice.service.rest.UserAttributeParameterEvaluator">
        <property name="token" value="username"/>
        <property name="userAttributeKey" value="user.login.id"/>
        <property name="claimName" value="sub"/>
    </bean>

    <!-- OAuth2 RESTful JSON:  Use 'OAuth2RestfulJsonNotificationService.serviceUrls' preference to specify services -->
    <bean id="oAuth2RestfulJsonNotificationService" class="org.jasig.portlet.notice.service.rest.OAuth2RestfulJsonNotificationService">
        <property name="name" value="oAuth2RestfulJsonNotificationService"/>
    </bean>

    <!-- PortletEvent:  Use 'NotificationLifecycleController.doEvents' preference to turn on event processing for a portlet definition -->
    <bean id="portletEventNotificationService" class="org.jasig.portlet.notice.service.event.PortletEventNotificationService">
        <property name="name" value="portletEventNotificationService"/>
    </bean>
    <bean id="PortletEventNotificationService.responseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="PortletEventNotificationService.responseCache"/>

    <!-- JPA -->
    <bean id="jpaNotificationService" class="org.jasig.portlet.notice.service.jpa.JpaNotificationService">
        <property name="name" value="jpaNotificationService"/>
    </bean>

    <!-- JDBC -->
    <bean id="AbstractJdbcNotificationService.responseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
          p:cacheManager-ref="cacheManager" p:cacheName="AbstractJdbcNotificationService.responseCache"/>

    <!-- DEMO -->
    <bean id="demoNotifications" class="org.jasig.portlet.notice.service.classloader.DemoNotificationService">
        <property name="name" value="demoNotifications"/>
        <property name="active" value="true"/>
    </bean>
    <bean id="demoEmergencyAlerts" class="org.jasig.portlet.notice.service.classloader.LegacyEmergencyAlertsDemoNotifictionService">
        <property name="name" value="demoEmergencyAlerts"/>
        <property name="active" value="false"/> <!-- The emergency alerts demo can be activated by the EmergencyAlertAdminController. -->
    </bean>

    <!-- SSP notifications -->
    <bean id="sspNotifications" class="org.jasig.portlet.notice.service.ssp.SSPTaskNotificationService">
        <property name="name" value="sspTaskNotificationService"/>
        <property name="sspApi" ref="sspApi"/>
        <property name="personLookup">
            <bean class="org.jasig.portlet.notice.service.ssp.SSPSchoolIdPersonLookup">
                <property name="sspApi" ref="sspApi"/>
            </bean>
        </property>
    </bean>
    <bean class="org.jasig.portlet.notice.service.ssp.SSPApiLocator"/>
    <bean id="StudentSuccessPlanService.schoolIdToPersonIdCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
          p:cacheManager-ref="cacheManager" p:cacheName="StudentSuccessPlanService.schoolIdToPersonIdCache"/>
    <bean id="sspApi" class="org.jasig.portlet.notice.service.ssp.SSPApi">
        <property name="restTemplate" ref="restTemplate"/>
    </bean>

</beans>
